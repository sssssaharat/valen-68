"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import Card from "../components/Card";
export default function Home() {
    const [step, setStep] = useState(0);
    const [isOpen, setIsOpen] = useState(false);
    const [index, setIndex] = useState(0);

    // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ Card
    const images = [
        "/images/image1.jpg",
        "/images/image2.jpg",
        "/images/image3.jpg",
        "/images/image4.jpg",
    ];

    function handleNext() {
        setStep((prev) => prev + 1); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    }

    // function handleBack() {
    //     setStep((prev) => prev - 1); // ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
    //     if (step === 2) setIndex(0); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï index ‡∏ñ‡πâ‡∏≤‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ Card
    // }

    return (
        <div className="flex items-center justify-center min-h-screen bg-[#CC001E]">
            <AnimatePresence mode="wait">
                {step === 0 && (
                    <motion.div
                        key="welcome"
                        className="flex flex-col items-center justify-center text-center w-full h-screen bg-[#8B0000] p-10"
                        initial={{ opacity: 0, scale: 0.8 }}
                        animate={{ opacity: 1, scale: 1 }}
                        exit={{ opacity: 0, scale: 0.8 }}
                    >
                        <h1 className="text-7xl font-bold text-white handwriting">
                            I dare you to invest in yourself.
                        </h1>

                        <p className="text-6xl text-white romantic">
                            Because you&apos;re <span className="font-bold">worth</span> the investment.
                        </p>

                        <button
                            className="heart-button"
                            onClick={handleNext}
                        >

                        </button>

                    </motion.div>

                )}

                {step === 1 && (
                  
                    <motion.div
                        key="envelope"
                        className="flex flex-col items-center justify-center text-center"
                        initial={{ opacity: 0, scale: 0.8 }}
                        animate={{ opacity: 1, scale: 1 }}
                        exit={{ opacity: 0, scale: 0.8 }}
                    >
                        {/* üì¨ ‡∏ã‡∏≠‡∏á‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */}
                        <div className="relative w-96 h-72 flex justify-center">
                            {/* üîº ‡∏ù‡∏≤‡∏õ‡∏¥‡∏î‡∏ã‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */}
                            <motion.div
                                className="absolute top-0 w-full h-36 bg-red-600 rounded-t-lg shadow-lg"
                                initial={{ rotateX: 0 }}
                                animate={isOpen ? { rotateX: -180, y: -10 } : {}}
                                transition={{ duration: 0.8 }}
                            />

                            {/* üì© ‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */}
                            <motion.div
                                className="absolute w-80 h-56 bg-white rounded-md shadow-md p-8 z-10"
                                initial={{ y: 20, opacity: 0 }}
                                animate={isOpen ? { y: -60, opacity: 1 } : {}}
                                transition={{ delay: 0.6, duration: 0.5 }}
                            >
                                <p className="text-gray-700 font-bold text-2xl">üíå ‡∏ñ‡∏∂‡∏á p&apos;ying,</p>
                                <p className="text-gray-600 mt-3 text-xl">&quot;‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ö‡∏Å‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏´‡∏£‡∏≠‡∏Å‡∏ô‡∏∞ ‡∏ú‡∏°‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å ‡πÅ‡∏ï‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ü‡∏±‡∏á‡πÄ‡∏™‡∏°‡∏≠ü•π&quot;</p>
                            </motion.div>

                            {/* üè¶ ‡∏ï‡∏±‡∏ß‡∏ã‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */}
                            <div className="absolute bottom-0 w-full h-48 bg-red-500 rounded-b-lg shadow-lg" />
                        </div>

                        {/* ‚ù§Ô∏è ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏ã‡∏≠‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */}
                        {!isOpen ? (
                            <button
                                className="heart-button mt-8 w-32 h-32 text-2xl"
                                onClick={() => setIsOpen(true)}
                            >
                                ‡πÄ‡∏õ‡∏¥‡∏î üíå
                            </button>
                        ) : (
                            <button
                                className="heart-button mt-8 w-32 h-32 text-2xl"
                                onClick={handleNext} 
                            >
                                
                            </button>
                        )}
                    </motion.div>

                )}

                {step === 2 && (
                    // ‚úÖ ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á Card
                    <motion.div
                        key={`cards-${index}`}
                        className="flex flex-col items-center"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                    >
                        <motion.div key={`card-container-${index}`} style={{ width: 300, height: 400, position: "relative" }}>
                            <Card key={`back-${index}`}index={index}
                                setIndex={setIndex}
                                drag="x" frontCard={false} imageSrc={images[(index + 1) % images.length]} />
                            <Card
                                key={`front-${index}`}
                                frontCard={true}
                                index={index}
                                setIndex={setIndex}
                                drag="x"
                                imageSrc={images[index % images.length]}
                            />
                        </motion.div>
                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
                        {/* <button
                            className="mt-12 px-6 py-3 bg-red-500 text-white rounded-lg shadow-md hover:bg-red-600 transition"
                            onClick={handleBack}
                        >
                            
                        </button> */}
                    </motion.div>
                )}
            </AnimatePresence>
        </div>
    );
}